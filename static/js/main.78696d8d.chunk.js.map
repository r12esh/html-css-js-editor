{"version":3,"sources":["components/Editor.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["Editor","props","displayName","language","value","onChange","useState","open","setOpen","className","onClick","onBeforeChange","editor","data","options","theme","lineWrapping","lint","mode","lineNumbers","App","html","setHtml","css","setCss","js","setJs","sourceDocument","setSourceDocument","useEffect","localData","localStorage","getItem","JSON","parse","setItem","stringify","timeOut","setTimeout","clearTimeout","srcDoc","title","sandbox","frameBorder","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQA4CeA,EAjCA,SAACC,GAAW,IAEjBC,EAA2CD,EAA3CC,YAAaC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAFd,EAIAC,oBAAS,GAJT,mBAIjBC,EAJiB,KAIXC,EAJW,KAUxB,OACE,sBAAKC,UAAS,2BAAsBF,EAAO,GAAK,aAAhD,UACE,sBAAKE,UAAU,eAAf,UACGP,EACD,mBAAGO,UAAU,yBAAyBC,QAAS,kBAAIF,GAASD,IAA5D,SAAoEA,EAAO,WAAa,cAG1F,cAAC,aAAD,CACEI,eAZe,SAACC,EAAQC,EAAMT,GAClCC,EAASD,IAYLA,MAAOA,EACPK,UAAU,sBACVK,QAAS,CACPC,MAAO,WACPC,cAAc,EACdC,MAAM,EACNC,KAAMf,EACNgB,aAAa,SCyCRC,MA3Ef,WAAgB,IAAD,EAEWd,mBAAS,IAFpB,mBAENe,EAFM,KAEAC,EAFA,OAGShB,mBAAS,IAHlB,mBAGNiB,EAHM,KAGDC,EAHC,OAIOlB,mBAAS,IAJhB,mBAINmB,EAJM,KAIFC,EAJE,OAK+BpB,mBAAS,IALxC,mBAKNqB,EALM,KAKUC,EALV,KAuCb,OA/BAC,qBAAU,WACR,IAAIC,EAAYC,aAAaC,QAAQ,qBACrCF,EAAYG,KAAKC,MAAMJ,MAErBR,EAAQQ,EAAUT,MAClBG,EAAOM,EAAUP,KACjBG,EAAMI,EAAUL,OAElB,IAEFI,qBAAU,WAGR,IAAMC,EAAY,CAACT,OAAKE,MAAIE,MAC5BM,aAAaI,QAAQ,mBAAmBF,KAAKG,UAAUN,IAEvD,IAAMO,EAAUC,YAAW,WACzBV,EAAkB,iCAAD,OAEPP,EAFO,mCAGNE,EAHM,qCAILE,EAJK,sCAOhB,KAGH,OAAO,kBAAMc,aAAaF,MACzB,CAAChB,EAAME,EAAKE,IAIb,qCACE,sBAAKhB,UAAU,gBAAf,UACE,cAAC,EAAD,CACEN,SAAS,MACTD,YAAY,OACZE,MAAOiB,EACPhB,SAAUiB,IAEZ,cAAC,EAAD,CACEnB,SAAS,OACTD,YAAY,MACZE,MAAOmB,EACPlB,SAAUmB,IAEZ,cAAC,EAAD,CACErB,SAAS,aACTD,YAAY,aACZE,MAAOqB,EACPpB,SAAUqB,OAGd,qBAAKjB,UAAU,cAAf,SACE,wBACE+B,OAAQb,EACRc,MAAM,SACNC,QAAQ,wEACRC,YAAY,IACZC,MAAM,OACNC,OAAO,eC3DFC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78696d8d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/css/css\";\r\nimport \"codemirror/mode/sass/sass\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/addon/lint/lint\"\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\n\r\n\r\nconst Editor = (props) => {\r\n\r\n  const { displayName, language, value, onChange } = props;\r\n\r\n  const [open, setOpen] = useState(true)\r\n\r\n  const handleChange = (editor, data, value) => {\r\n    onChange(value)\r\n  }\r\n\r\n  return (\r\n    <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\r\n      <div className=\"editor-title\">\r\n        {displayName}\r\n        <p className=\"collapse-expand-button\" onClick={()=>setOpen(!open)}>{open ? \"Collapse\" : \"Expand\"}</p>\r\n      </div>\r\n\r\n      <ControlledEditor\r\n        onBeforeChange={handleChange}\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          theme: \"material\",\r\n          lineWrapping: true,\r\n          lint: true,\r\n          mode: language,\r\n          lineNumbers: true,\r\n        }}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useState, useEffect } from \"react\";\nimport Editor from \"./Editor\"\n\nfunction App() {\n\n  const [html, setHtml] = useState(\"\");\n  const [css, setCss] = useState(\"\");\n  const [js, setJs] = useState(\"\");\n  const [sourceDocument, setSourceDocument] = useState(\"\");\n\n  //Retrieve data\n  useEffect(()=>{\n    let localData = localStorage.getItem(\"code-editor-data\");\n    localData = JSON.parse(localData);\n    if(localData){\n      setHtml(localData.html);\n      setCss(localData.css);\n      setJs(localData.js);\n    }\n  },[])\n\n  useEffect(() => {\n\n    //Saving in localstorage\n    const localData = {html,css,js}\n    localStorage.setItem(\"code-editor-data\",JSON.stringify(localData))\n\n    const timeOut = setTimeout(() => {\n      setSourceDocument(`\n      <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${js}</script>\n      </html>\n    `)\n    }, 900);\n\n    // Clearing the timeOut \n    return () => clearTimeout(timeOut);\n  }, [html, css, js])\n\n\n  return (\n    <>\n      <div className=\"pane top-pane\">\n        <Editor\n          language=\"xml\"\n          displayName=\"HTML\"\n          value={html}\n          onChange={setHtml}\n        />\n        <Editor\n          language=\"sass\"\n          displayName=\"CSS\"\n          value={css}\n          onChange={setCss}\n        />\n        <Editor\n          language=\"javascript\"\n          displayName=\"Javascript\"\n          value={js}\n          onChange={setJs}\n        />\n      </div>\n      <div className=\"bottom-pane\">\n        <iframe\n          srcDoc={sourceDocument}\n          title=\"output\"\n          sandbox=\"allow-forms allow-popups allow-scripts allow-same-origin allow-modals\"\n          frameBorder=\"0\"\n          width=\"100%\"\n          height=\"100%\"\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}